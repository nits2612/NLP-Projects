{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nittsgh/nlp-text-classification-using-naive-byes?scriptVersionId=199999307\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"4da44639","metadata":{"papermill":{"duration":0.008686,"end_time":"2024-10-08T08:43:46.591441","exception":false,"start_time":"2024-10-08T08:43:46.582755","status":"completed"},"tags":[]},"source":["# Installation and import of necessary packages"]},{"cell_type":"code","execution_count":1,"id":"e4b7d8b5","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:46.609004Z","iopub.status.busy":"2024-10-08T08:43:46.608578Z","iopub.status.idle":"2024-10-08T08:43:49.643724Z","shell.execute_reply":"2024-10-08T08:43:49.642726Z"},"papermill":{"duration":3.046848,"end_time":"2024-10-08T08:43:49.646354","exception":false,"start_time":"2024-10-08T08:43:46.599506","status":"completed"},"tags":[]},"outputs":[],"source":["import nltk\n","import string\n","import random\n","import pandas as pd"]},{"cell_type":"markdown","id":"d20306cf","metadata":{"papermill":{"duration":0.007689,"end_time":"2024-10-08T08:43:49.662283","exception":false,"start_time":"2024-10-08T08:43:49.654594","status":"completed"},"tags":[]},"source":["# Download necessary corpus and models from nltk"]},{"cell_type":"markdown","id":"6643fe2e","metadata":{"papermill":{"duration":0.007549,"end_time":"2024-10-08T08:43:49.678767","exception":false,"start_time":"2024-10-08T08:43:49.671218","status":"completed"},"tags":[]},"source":["**Use the \"names\" corpus from nltk to build a simple model for gender classification of names.**"]},{"cell_type":"code","execution_count":2,"id":"ae973b76","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:49.696381Z","iopub.status.busy":"2024-10-08T08:43:49.695812Z","iopub.status.idle":"2024-10-08T08:43:50.020525Z","shell.execute_reply":"2024-10-08T08:43:50.01939Z"},"papermill":{"duration":0.33617,"end_time":"2024-10-08T08:43:50.022907","exception":false,"start_time":"2024-10-08T08:43:49.686737","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package names to /usr/share/nltk_data...\n","[nltk_data]   Package names is already up-to-date!\n","[nltk_data] Downloading package product_reviews_1 to\n","[nltk_data]     /usr/share/nltk_data...\n","[nltk_data]   Package product_reviews_1 is already up-to-date!\n","[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"data":{"text/plain":["True"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["nltk.download(\"names\")\n","nltk.download('product_reviews_1')\n","nltk.download('punkt')\n","nltk.download('stopwords')"]},{"cell_type":"code","execution_count":3,"id":"c88fa4f9","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.041329Z","iopub.status.busy":"2024-10-08T08:43:50.040873Z","iopub.status.idle":"2024-10-08T08:43:50.048252Z","shell.execute_reply":"2024-10-08T08:43:50.047099Z"},"papermill":{"duration":0.019261,"end_time":"2024-10-08T08:43:50.050474","exception":false,"start_time":"2024-10-08T08:43:50.031213","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["['female.txt', 'male.txt']\n"]}],"source":["print(nltk.corpus.names.fileids())"]},{"cell_type":"markdown","id":"933c56d7","metadata":{"papermill":{"duration":0.008089,"end_time":"2024-10-08T08:43:50.067019","exception":false,"start_time":"2024-10-08T08:43:50.05893","status":"completed"},"tags":[]},"source":["# Data acquisition"]},{"cell_type":"markdown","id":"d0a2152f","metadata":{"papermill":{"duration":0.007922,"end_time":"2024-10-08T08:43:50.083436","exception":false,"start_time":"2024-10-08T08:43:50.075514","status":"completed"},"tags":[]},"source":["* The names corpus contains two text files.\n","* male.txt contains list of names which are most frequently used for males.\n","* female.txt contains list of names most commonly used for females."]},{"cell_type":"markdown","id":"10f92d8a","metadata":{"papermill":{"duration":0.007875,"end_time":"2024-10-08T08:43:50.099548","exception":false,"start_time":"2024-10-08T08:43:50.091673","status":"completed"},"tags":[]},"source":["**Start by extracting names as female and male names list.**"]},{"cell_type":"code","execution_count":4,"id":"263a6da1","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.11766Z","iopub.status.busy":"2024-10-08T08:43:50.11721Z","iopub.status.idle":"2024-10-08T08:43:50.128256Z","shell.execute_reply":"2024-10-08T08:43:50.127123Z"},"papermill":{"duration":0.022909,"end_time":"2024-10-08T08:43:50.130692","exception":false,"start_time":"2024-10-08T08:43:50.107783","status":"completed"},"tags":[]},"outputs":[],"source":["female_name=nltk.corpus.names.words('female.txt')\n","male_name=nltk.corpus.names.words('male.txt')"]},{"cell_type":"markdown","id":"6b9b1bc5","metadata":{"papermill":{"duration":0.008088,"end_time":"2024-10-08T08:43:50.147408","exception":false,"start_time":"2024-10-08T08:43:50.13932","status":"completed"},"tags":[]},"source":["**Create a labelled data list with names from female.txt labeled as females and names from male.txt as males as a tuple.**"]},{"cell_type":"code","execution_count":5,"id":"da4921ea","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.165663Z","iopub.status.busy":"2024-10-08T08:43:50.165201Z","iopub.status.idle":"2024-10-08T08:43:50.173322Z","shell.execute_reply":"2024-10-08T08:43:50.172294Z"},"papermill":{"duration":0.019716,"end_time":"2024-10-08T08:43:50.175464","exception":false,"start_time":"2024-10-08T08:43:50.155748","status":"completed"},"tags":[]},"outputs":[],"source":["labeled_data= ([(name,'male') for name in male_name] + [(name,'female') for name in female_name])"]},{"cell_type":"code","execution_count":6,"id":"c17b3c49","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.193672Z","iopub.status.busy":"2024-10-08T08:43:50.193248Z","iopub.status.idle":"2024-10-08T08:43:50.200576Z","shell.execute_reply":"2024-10-08T08:43:50.199388Z"},"papermill":{"duration":0.019048,"end_time":"2024-10-08T08:43:50.202847","exception":false,"start_time":"2024-10-08T08:43:50.183799","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[('Aamir', 'male'),\n"," ('Aaron', 'male'),\n"," ('Abbey', 'male'),\n"," ('Abbie', 'male'),\n"," ('Abbot', 'male'),\n"," ('Abbott', 'male'),\n"," ('Abby', 'male'),\n"," ('Abdel', 'male'),\n"," ('Abdul', 'male'),\n"," ('Abdulkarim', 'male')]"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["labeled_data[:10]"]},{"cell_type":"markdown","id":"3bb6c9d5","metadata":{"papermill":{"duration":0.008007,"end_time":"2024-10-08T08:43:50.219432","exception":false,"start_time":"2024-10-08T08:43:50.211425","status":"completed"},"tags":[]},"source":["# Feature Extraction"]},{"cell_type":"markdown","id":"4f6e9ef1","metadata":{"papermill":{"duration":0.008133,"end_time":"2024-10-08T08:43:50.235939","exception":false,"start_time":"2024-10-08T08:43:50.227806","status":"completed"},"tags":[]},"source":["* Text data is unstructured and features need to be extracted in order to use it in ML models.\n","* Here features are identified manually as length, first letter, last letter, count of each letter and count of vowels in the name.\n","* The function below extracts these features and returns a dictionary of features."]},{"cell_type":"code","execution_count":7,"id":"e30a898a","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.256049Z","iopub.status.busy":"2024-10-08T08:43:50.255082Z","iopub.status.idle":"2024-10-08T08:43:50.262805Z","shell.execute_reply":"2024-10-08T08:43:50.261751Z"},"papermill":{"duration":0.019616,"end_time":"2024-10-08T08:43:50.26506","exception":false,"start_time":"2024-10-08T08:43:50.245444","status":"completed"},"tags":[]},"outputs":[],"source":["def get_features(name):\n","    name=name.lower()\n","    feature_dict={}\n","    \n","    # Getting the features like last letter, first letter,length\n","    feature_dict['length']=len(name)\n","    feature_dict['first_letter']=name[0]\n","    feature_dict['last letter']=name[-1]\n","    \n","    # Getting count of consonants and vowels in the name\n","    vowels=set('aeiou')\n","    feature_dict['vowel_count']=sum(1 for char in name if char in vowels)\n","    feature_dict['consonant_count']=len(name)- feature_dict['vowel_count']\n","    \n","     # Common suffix (last two letters)\n","    feature_dict['suffix'] = name[-2:] if len(name) > 1 else name[-1]\n","\n","    # Frequency of each letter in the name\n","    for char in string.ascii_lowercase:\n","        feature_dict[f'count_{char}'] = name.count(char)\n","    \n","    return feature_dict"]},{"cell_type":"markdown","id":"2c7cac0e","metadata":{"papermill":{"duration":0.008138,"end_time":"2024-10-08T08:43:50.281823","exception":false,"start_time":"2024-10-08T08:43:50.273685","status":"completed"},"tags":[]},"source":["**Transform names in the labeled data to these features using the above function.**"]},{"cell_type":"code","execution_count":8,"id":"8551e6ec","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.300915Z","iopub.status.busy":"2024-10-08T08:43:50.300022Z","iopub.status.idle":"2024-10-08T08:43:50.422107Z","shell.execute_reply":"2024-10-08T08:43:50.421034Z"},"papermill":{"duration":0.134122,"end_time":"2024-10-08T08:43:50.424513","exception":false,"start_time":"2024-10-08T08:43:50.290391","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[({'length': 5,\n","   'first_letter': 'a',\n","   'last letter': 'r',\n","   'vowel_count': 3,\n","   'consonant_count': 2,\n","   'suffix': 'ir',\n","   'count_a': 2,\n","   'count_b': 0,\n","   'count_c': 0,\n","   'count_d': 0,\n","   'count_e': 0,\n","   'count_f': 0,\n","   'count_g': 0,\n","   'count_h': 0,\n","   'count_i': 1,\n","   'count_j': 0,\n","   'count_k': 0,\n","   'count_l': 0,\n","   'count_m': 1,\n","   'count_n': 0,\n","   'count_o': 0,\n","   'count_p': 0,\n","   'count_q': 0,\n","   'count_r': 1,\n","   'count_s': 0,\n","   'count_t': 0,\n","   'count_u': 0,\n","   'count_v': 0,\n","   'count_w': 0,\n","   'count_x': 0,\n","   'count_y': 0,\n","   'count_z': 0},\n","  'male'),\n"," ({'length': 5,\n","   'first_letter': 'a',\n","   'last letter': 'n',\n","   'vowel_count': 3,\n","   'consonant_count': 2,\n","   'suffix': 'on',\n","   'count_a': 2,\n","   'count_b': 0,\n","   'count_c': 0,\n","   'count_d': 0,\n","   'count_e': 0,\n","   'count_f': 0,\n","   'count_g': 0,\n","   'count_h': 0,\n","   'count_i': 0,\n","   'count_j': 0,\n","   'count_k': 0,\n","   'count_l': 0,\n","   'count_m': 0,\n","   'count_n': 1,\n","   'count_o': 1,\n","   'count_p': 0,\n","   'count_q': 0,\n","   'count_r': 1,\n","   'count_s': 0,\n","   'count_t': 0,\n","   'count_u': 0,\n","   'count_v': 0,\n","   'count_w': 0,\n","   'count_x': 0,\n","   'count_y': 0,\n","   'count_z': 0},\n","  'male')]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["new_lab_data= []\n","for name, label in labeled_data:\n","    features = get_features(name)\n","    new_lab_data.append((features, label))\n","\n","new_lab_data[:2]"]},{"cell_type":"markdown","id":"78cf6ced","metadata":{"papermill":{"duration":0.008371,"end_time":"2024-10-08T08:43:50.442996","exception":false,"start_time":"2024-10-08T08:43:50.434625","status":"completed"},"tags":[]},"source":["# Model development"]},{"cell_type":"markdown","id":"9b5c1423","metadata":{"papermill":{"duration":0.008543,"end_time":"2024-10-08T08:43:50.460167","exception":false,"start_time":"2024-10-08T08:43:50.451624","status":"completed"},"tags":[]},"source":["**Shuffle the data in random order before splitting into train and test in order to obtain optimized sample for training.**"]},{"cell_type":"code","execution_count":9,"id":"0c34e4e5","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.479337Z","iopub.status.busy":"2024-10-08T08:43:50.478917Z","iopub.status.idle":"2024-10-08T08:43:50.48915Z","shell.execute_reply":"2024-10-08T08:43:50.488138Z"},"papermill":{"duration":0.022061,"end_time":"2024-10-08T08:43:50.491331","exception":false,"start_time":"2024-10-08T08:43:50.46927","status":"completed"},"tags":[]},"outputs":[],"source":["random.shuffle(new_lab_data)"]},{"cell_type":"markdown","id":"091e144f","metadata":{"papermill":{"duration":0.008147,"end_time":"2024-10-08T08:43:50.508134","exception":false,"start_time":"2024-10-08T08:43:50.499987","status":"completed"},"tags":[]},"source":["**Select first 1000 records of the shuffled data as test and remaining as training set.**"]},{"cell_type":"code","execution_count":10,"id":"affa0945","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.526774Z","iopub.status.busy":"2024-10-08T08:43:50.526356Z","iopub.status.idle":"2024-10-08T08:43:50.531451Z","shell.execute_reply":"2024-10-08T08:43:50.530467Z"},"papermill":{"duration":0.016831,"end_time":"2024-10-08T08:43:50.5336","exception":false,"start_time":"2024-10-08T08:43:50.516769","status":"completed"},"tags":[]},"outputs":[],"source":["test_data = new_lab_data[:1000]\n","train_data = new_lab_data[1000:]"]},{"cell_type":"markdown","id":"64b2c13f","metadata":{"papermill":{"duration":0.008328,"end_time":"2024-10-08T08:43:50.550497","exception":false,"start_time":"2024-10-08T08:43:50.542169","status":"completed"},"tags":[]},"source":["**Define the classifier object for training of the model.**"]},{"cell_type":"code","execution_count":11,"id":"c6619655","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.570481Z","iopub.status.busy":"2024-10-08T08:43:50.569481Z","iopub.status.idle":"2024-10-08T08:43:50.826685Z","shell.execute_reply":"2024-10-08T08:43:50.825422Z"},"papermill":{"duration":0.26967,"end_time":"2024-10-08T08:43:50.82928","exception":false,"start_time":"2024-10-08T08:43:50.55961","status":"completed"},"tags":[]},"outputs":[],"source":["classifier= nltk.naivebayes.NaiveBayesClassifier.train(train_data)"]},{"cell_type":"markdown","id":"ee3d4109","metadata":{"papermill":{"duration":0.008338,"end_time":"2024-10-08T08:43:50.846406","exception":false,"start_time":"2024-10-08T08:43:50.838068","status":"completed"},"tags":[]},"source":["**Once the training is complete, the classifier object may be used to classify for a single name input.**"]},{"cell_type":"code","execution_count":12,"id":"bf9f938f","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.865999Z","iopub.status.busy":"2024-10-08T08:43:50.865046Z","iopub.status.idle":"2024-10-08T08:43:50.872043Z","shell.execute_reply":"2024-10-08T08:43:50.871041Z"},"papermill":{"duration":0.019061,"end_time":"2024-10-08T08:43:50.874112","exception":false,"start_time":"2024-10-08T08:43:50.855051","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["'male'"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["classifier.classify(get_features('Rohan'))"]},{"cell_type":"markdown","id":"c1626041","metadata":{"papermill":{"duration":0.00846,"end_time":"2024-10-08T08:43:50.891333","exception":false,"start_time":"2024-10-08T08:43:50.882873","status":"completed"},"tags":[]},"source":["\n","**Note :**\n","  - For classification input text needs to be converted into features similar to the training data\n","  - We can use the same feature extraction function here for transformation\n","    \n"]},{"cell_type":"markdown","id":"316d8bfd","metadata":{"papermill":{"duration":0.008363,"end_time":"2024-10-08T08:43:50.908394","exception":false,"start_time":"2024-10-08T08:43:50.900031","status":"completed"},"tags":[]},"source":["**This classifier object can also be used to classify multiple text inputs at the same time.**"]},{"cell_type":"markdown","id":"3297c058","metadata":{"papermill":{"duration":0.008394,"end_time":"2024-10-08T08:43:50.925547","exception":false,"start_time":"2024-10-08T08:43:50.917153","status":"completed"},"tags":[]},"source":["* In order to do so, pass a unlabeled data to the classifier associated function classify_many.\n","* The below snippet separates the labels from the preprocessed (feature extracted) list and prepares the data input for the classification function."]},{"cell_type":"code","execution_count":13,"id":"b8203962","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.944869Z","iopub.status.busy":"2024-10-08T08:43:50.944064Z","iopub.status.idle":"2024-10-08T08:43:50.951014Z","shell.execute_reply":"2024-10-08T08:43:50.950038Z"},"papermill":{"duration":0.019082,"end_time":"2024-10-08T08:43:50.95338","exception":false,"start_time":"2024-10-08T08:43:50.934298","status":"completed"},"tags":[]},"outputs":[],"source":["test_features = []\n","test_labels = []\n","for feature_set, label in test_data:\n","    test_features.append(feature_set)\n","    test_labels.append(label)"]},{"cell_type":"markdown","id":"4f374b2e","metadata":{"papermill":{"duration":0.008357,"end_time":"2024-10-08T08:43:50.970448","exception":false,"start_time":"2024-10-08T08:43:50.962091","status":"completed"},"tags":[]},"source":["**Obtain the classes for the test input.**"]},{"cell_type":"code","execution_count":14,"id":"6c1f4190","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:50.989571Z","iopub.status.busy":"2024-10-08T08:43:50.98878Z","iopub.status.idle":"2024-10-08T08:43:51.092668Z","shell.execute_reply":"2024-10-08T08:43:51.09168Z"},"papermill":{"duration":0.116138,"end_time":"2024-10-08T08:43:51.095199","exception":false,"start_time":"2024-10-08T08:43:50.979061","status":"completed"},"tags":[]},"outputs":[],"source":["test_labels_pred = classifier.classify_many(test_features)"]},{"cell_type":"markdown","id":"1bfdfce7","metadata":{"papermill":{"duration":0.008301,"end_time":"2024-10-08T08:43:51.11261","exception":false,"start_time":"2024-10-08T08:43:51.104309","status":"completed"},"tags":[]},"source":["# Evaluation"]},{"cell_type":"markdown","id":"8505d4ba","metadata":{"papermill":{"duration":0.008228,"end_time":"2024-10-08T08:43:51.129595","exception":false,"start_time":"2024-10-08T08:43:51.121367","status":"completed"},"tags":[]},"source":["<font size = 5 color = blue> <b> Confusion Matrix"]},{"cell_type":"code","execution_count":15,"id":"a4ed3546","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.148453Z","iopub.status.busy":"2024-10-08T08:43:51.148019Z","iopub.status.idle":"2024-10-08T08:43:51.155845Z","shell.execute_reply":"2024-10-08T08:43:51.154809Z"},"papermill":{"duration":0.019639,"end_time":"2024-10-08T08:43:51.157945","exception":false,"start_time":"2024-10-08T08:43:51.138306","status":"completed"},"tags":[]},"outputs":[],"source":["for_matrix = pd.DataFrame({'pred' : test_labels_pred, 'act' : test_labels})"]},{"cell_type":"code","execution_count":16,"id":"679938d2","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.177104Z","iopub.status.busy":"2024-10-08T08:43:51.176703Z","iopub.status.idle":"2024-10-08T08:43:51.223919Z","shell.execute_reply":"2024-10-08T08:43:51.222907Z"},"papermill":{"duration":0.059209,"end_time":"2024-10-08T08:43:51.226037","exception":false,"start_time":"2024-10-08T08:43:51.166828","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>act</th>\n","      <th>female</th>\n","      <th>male</th>\n","    </tr>\n","    <tr>\n","      <th>pred</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>female</th>\n","      <td>506</td>\n","      <td>94</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>114</td>\n","      <td>286</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["act     female  male\n","pred                \n","female     506    94\n","male       114   286"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["confusion_mat = pd.crosstab(for_matrix.pred, for_matrix.act)\n","confusion_mat"]},{"cell_type":"code","execution_count":17,"id":"45860030","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.245524Z","iopub.status.busy":"2024-10-08T08:43:51.245061Z","iopub.status.idle":"2024-10-08T08:43:51.252039Z","shell.execute_reply":"2024-10-08T08:43:51.251077Z"},"papermill":{"duration":0.019255,"end_time":"2024-10-08T08:43:51.25415","exception":false,"start_time":"2024-10-08T08:43:51.234895","status":"completed"},"tags":[]},"outputs":[],"source":["# Get the values of true positives, true negatives, false positives, false negatives for computation of accuracy and other measures\n","TP = confusion_mat.iloc[0,0]\n","TN = confusion_mat.iloc[1,1]\n","FP = confusion_mat.iloc[0,1]\n","FN = confusion_mat.iloc[1,0]"]},{"cell_type":"code","execution_count":18,"id":"60a56859","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.27404Z","iopub.status.busy":"2024-10-08T08:43:51.273087Z","iopub.status.idle":"2024-10-08T08:43:51.278715Z","shell.execute_reply":"2024-10-08T08:43:51.277707Z"},"papermill":{"duration":0.017934,"end_time":"2024-10-08T08:43:51.281076","exception":false,"start_time":"2024-10-08T08:43:51.263142","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy : 79.20 %\n"]}],"source":["Accuracy = (TP + TN) / sum([TP, TN, FP, FN]) * 100\n","print(f\"Accuracy : {Accuracy:0.2f} %\")"]},{"cell_type":"markdown","id":"68e3dab1","metadata":{"papermill":{"duration":0.008469,"end_time":"2024-10-08T08:43:51.298483","exception":false,"start_time":"2024-10-08T08:43:51.290014","status":"completed"},"tags":[]},"source":["**NLTK also provides functions to obtain accuracy for the model.**"]},{"cell_type":"code","execution_count":19,"id":"b0e655bb","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.318053Z","iopub.status.busy":"2024-10-08T08:43:51.317122Z","iopub.status.idle":"2024-10-08T08:43:51.421099Z","shell.execute_reply":"2024-10-08T08:43:51.420067Z"},"papermill":{"duration":0.116174,"end_time":"2024-10-08T08:43:51.423375","exception":false,"start_time":"2024-10-08T08:43:51.307201","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0.792"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["## Accuracy on test data :\n","nltk.classify.accuracy(classifier, test_data)"]},{"cell_type":"markdown","id":"1a2ca379","metadata":{"papermill":{"duration":0.008921,"end_time":"2024-10-08T08:43:51.442649","exception":false,"start_time":"2024-10-08T08:43:51.433728","status":"completed"},"tags":[]},"source":["**The nltk `naive bayes model` also provides the `top n` important features contributing in classification.**"]},{"cell_type":"code","execution_count":20,"id":"0a4fa9e3","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:43:51.462776Z","iopub.status.busy":"2024-10-08T08:43:51.461841Z","iopub.status.idle":"2024-10-08T08:43:51.469468Z","shell.execute_reply":"2024-10-08T08:43:51.468485Z"},"papermill":{"duration":0.020215,"end_time":"2024-10-08T08:43:51.471946","exception":false,"start_time":"2024-10-08T08:43:51.451731","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Most Informative Features\n","                  suffix = 'na'           female : male   =     95.7 : 1.0\n","                  suffix = 'la'           female : male   =     71.1 : 1.0\n","             last letter = 'k'              male : female =     67.7 : 1.0\n","                  suffix = 'us'             male : female =     63.1 : 1.0\n","                  suffix = 'ia'           female : male   =     37.5 : 1.0\n","                  suffix = 'sa'           female : male   =     34.0 : 1.0\n","             last letter = 'a'            female : male   =     31.1 : 1.0\n","                  suffix = 'do'             male : female =     25.1 : 1.0\n","                  suffix = 'ra'           female : male   =     24.7 : 1.0\n","                  suffix = 'ta'           female : male   =     22.9 : 1.0\n","                  suffix = 'rd'             male : female =     22.1 : 1.0\n","                  suffix = 'rt'             male : female =     21.8 : 1.0\n","                  suffix = 'ld'             male : female =     20.4 : 1.0\n","             last letter = 'f'              male : female =     16.0 : 1.0\n","                  suffix = 'ch'             male : female =     14.4 : 1.0\n"]}],"source":["classifier.show_most_informative_features(n = 15)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.14"},"papermill":{"default_parameters":{},"duration":8.343589,"end_time":"2024-10-08T08:43:52.101074","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-10-08T08:43:43.757485","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}