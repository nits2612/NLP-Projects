{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nittsgh/nlp-text-classification-using-naive-byes?scriptVersionId=199998281\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"282c5252","metadata":{"papermill":{"duration":0.012712,"end_time":"2024-10-08T08:36:31.396626","exception":false,"start_time":"2024-10-08T08:36:31.383914","status":"completed"},"tags":[]},"source":["# Installation and import of necessary packages"]},{"cell_type":"code","execution_count":1,"id":"d11d7077","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:31.421937Z","iopub.status.busy":"2024-10-08T08:36:31.421389Z","iopub.status.idle":"2024-10-08T08:36:34.800504Z","shell.execute_reply":"2024-10-08T08:36:34.799099Z"},"papermill":{"duration":3.395143,"end_time":"2024-10-08T08:36:34.80346","exception":false,"start_time":"2024-10-08T08:36:31.408317","status":"completed"},"tags":[]},"outputs":[],"source":["import nltk\n","import string\n","import random\n","import pandas as pd"]},{"cell_type":"markdown","id":"feca2adf","metadata":{"papermill":{"duration":0.011086,"end_time":"2024-10-08T08:36:34.826635","exception":false,"start_time":"2024-10-08T08:36:34.815549","status":"completed"},"tags":[]},"source":["# Download necessary corpus and models from nltk"]},{"cell_type":"markdown","id":"7f77dc5e","metadata":{"papermill":{"duration":0.011127,"end_time":"2024-10-08T08:36:34.850401","exception":false,"start_time":"2024-10-08T08:36:34.839274","status":"completed"},"tags":[]},"source":["**Use the \"names\" corpus from nltk to build a simple model for gender classification of names.**"]},{"cell_type":"code","execution_count":2,"id":"73e4b74f","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:34.875334Z","iopub.status.busy":"2024-10-08T08:36:34.874673Z","iopub.status.idle":"2024-10-08T08:36:35.085648Z","shell.execute_reply":"2024-10-08T08:36:35.084343Z"},"papermill":{"duration":0.226375,"end_time":"2024-10-08T08:36:35.088277","exception":false,"start_time":"2024-10-08T08:36:34.861902","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package names to /usr/share/nltk_data...\n","[nltk_data]   Package names is already up-to-date!\n","[nltk_data] Downloading package product_reviews_1 to\n","[nltk_data]     /usr/share/nltk_data...\n","[nltk_data]   Package product_reviews_1 is already up-to-date!\n","[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"data":{"text/plain":["True"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["nltk.download(\"names\")\n","nltk.download('product_reviews_1')\n","nltk.download('punkt')\n","nltk.download('stopwords')"]},{"cell_type":"code","execution_count":3,"id":"ce0d733e","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.11446Z","iopub.status.busy":"2024-10-08T08:36:35.114009Z","iopub.status.idle":"2024-10-08T08:36:35.122573Z","shell.execute_reply":"2024-10-08T08:36:35.121041Z"},"papermill":{"duration":0.024485,"end_time":"2024-10-08T08:36:35.125039","exception":false,"start_time":"2024-10-08T08:36:35.100554","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["['female.txt', 'male.txt']\n"]}],"source":["print(nltk.corpus.names.fileids())"]},{"cell_type":"markdown","id":"4085eec9","metadata":{"papermill":{"duration":0.011802,"end_time":"2024-10-08T08:36:35.149357","exception":false,"start_time":"2024-10-08T08:36:35.137555","status":"completed"},"tags":[]},"source":["# Data acquisition"]},{"cell_type":"markdown","id":"aa20f3e0","metadata":{"papermill":{"duration":0.011774,"end_time":"2024-10-08T08:36:35.173376","exception":false,"start_time":"2024-10-08T08:36:35.161602","status":"completed"},"tags":[]},"source":["* The names corpus contains two text files.\n","* male.txt contains list of names which are most frequently used for males.\n","* female.txt contains list of names most commonly used for females."]},{"cell_type":"markdown","id":"221949b0","metadata":{"papermill":{"duration":0.011713,"end_time":"2024-10-08T08:36:35.197445","exception":false,"start_time":"2024-10-08T08:36:35.185732","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> Start by extracting names as female and male names list."]},{"cell_type":"code","execution_count":4,"id":"83d79719","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.224305Z","iopub.status.busy":"2024-10-08T08:36:35.223132Z","iopub.status.idle":"2024-10-08T08:36:35.235689Z","shell.execute_reply":"2024-10-08T08:36:35.23447Z"},"papermill":{"duration":0.029082,"end_time":"2024-10-08T08:36:35.238631","exception":false,"start_time":"2024-10-08T08:36:35.209549","status":"completed"},"tags":[]},"outputs":[],"source":["female_name=nltk.corpus.names.words('female.txt')\n","male_name=nltk.corpus.names.words('male.txt')"]},{"cell_type":"markdown","id":"b4a73ab7","metadata":{"papermill":{"duration":0.01228,"end_time":"2024-10-08T08:36:35.263228","exception":false,"start_time":"2024-10-08T08:36:35.250948","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Create a labelled data list with names from **female.txt** labeled as females and names from **male.txt** as males as a tuple."]},{"cell_type":"code","execution_count":5,"id":"d4f029ad","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.289064Z","iopub.status.busy":"2024-10-08T08:36:35.288607Z","iopub.status.idle":"2024-10-08T08:36:35.298423Z","shell.execute_reply":"2024-10-08T08:36:35.297181Z"},"papermill":{"duration":0.025811,"end_time":"2024-10-08T08:36:35.301093","exception":false,"start_time":"2024-10-08T08:36:35.275282","status":"completed"},"tags":[]},"outputs":[],"source":["labeled_data= ([(name,'male') for name in male_name] + [(name,'female') for name in female_name])"]},{"cell_type":"code","execution_count":6,"id":"d5b66d58","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.326808Z","iopub.status.busy":"2024-10-08T08:36:35.326373Z","iopub.status.idle":"2024-10-08T08:36:35.335031Z","shell.execute_reply":"2024-10-08T08:36:35.333781Z"},"papermill":{"duration":0.024279,"end_time":"2024-10-08T08:36:35.337458","exception":false,"start_time":"2024-10-08T08:36:35.313179","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[('Aamir', 'male'),\n"," ('Aaron', 'male'),\n"," ('Abbey', 'male'),\n"," ('Abbie', 'male'),\n"," ('Abbot', 'male'),\n"," ('Abbott', 'male'),\n"," ('Abby', 'male'),\n"," ('Abdel', 'male'),\n"," ('Abdul', 'male'),\n"," ('Abdulkarim', 'male')]"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["labeled_data[:10]"]},{"cell_type":"markdown","id":"b219ef77","metadata":{"papermill":{"duration":0.011721,"end_time":"2024-10-08T08:36:35.361314","exception":false,"start_time":"2024-10-08T08:36:35.349593","status":"completed"},"tags":[]},"source":["# Feature Extraction"]},{"cell_type":"markdown","id":"e0afe173","metadata":{"papermill":{"duration":0.011678,"end_time":"2024-10-08T08:36:35.385135","exception":false,"start_time":"2024-10-08T08:36:35.373457","status":"completed"},"tags":[]},"source":["* Text data is unstructured and features need to be extracted in order to use it in ML models.\n","* Here features are identified manually as length, first letter, last letter, count of each letter and count of vowels in the name.\n","* The function below extracts these features and returns a dictionary of features."]},{"cell_type":"code","execution_count":7,"id":"cf5d5c44","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.41246Z","iopub.status.busy":"2024-10-08T08:36:35.411991Z","iopub.status.idle":"2024-10-08T08:36:35.421334Z","shell.execute_reply":"2024-10-08T08:36:35.420141Z"},"papermill":{"duration":0.025194,"end_time":"2024-10-08T08:36:35.42383","exception":false,"start_time":"2024-10-08T08:36:35.398636","status":"completed"},"tags":[]},"outputs":[],"source":["def get_features(name):\n","    name=name.lower()\n","    feature_dict={}\n","    \n","    # Getting the features like last letter, first letter,length\n","    feature_dict['length']=len(name)\n","    feature_dict['first_letter']=name[0]\n","    feature_dict['last letter']=name[-1]\n","    \n","    # Getting count of consonants and vowels in the name\n","    vowels=set('aeiou')\n","    feature_dict['vowel_count']=sum(1 for char in name if char in vowels)\n","    feature_dict['consonant_count']=len(name)- feature_dict['vowel_count']\n","    \n","     # Common suffix (last two letters)\n","    feature_dict['suffix'] = name[-2:] if len(name) > 1 else name[-1]\n","\n","    # Frequency of each letter in the name\n","    for char in string.ascii_lowercase:\n","        feature_dict[f'count_{char}'] = name.count(char)\n","    \n","    return feature_dict"]},{"cell_type":"markdown","id":"92389b38","metadata":{"papermill":{"duration":0.011684,"end_time":"2024-10-08T08:36:35.447668","exception":false,"start_time":"2024-10-08T08:36:35.435984","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Transform names in the labeled data to these features using the above function."]},{"cell_type":"code","execution_count":8,"id":"2ca91f99","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.473748Z","iopub.status.busy":"2024-10-08T08:36:35.473301Z","iopub.status.idle":"2024-10-08T08:36:35.634566Z","shell.execute_reply":"2024-10-08T08:36:35.633288Z"},"papermill":{"duration":0.177378,"end_time":"2024-10-08T08:36:35.637228","exception":false,"start_time":"2024-10-08T08:36:35.45985","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[({'length': 5,\n","   'first_letter': 'a',\n","   'last letter': 'r',\n","   'vowel_count': 3,\n","   'consonant_count': 2,\n","   'suffix': 'ir',\n","   'count_a': 2,\n","   'count_b': 0,\n","   'count_c': 0,\n","   'count_d': 0,\n","   'count_e': 0,\n","   'count_f': 0,\n","   'count_g': 0,\n","   'count_h': 0,\n","   'count_i': 1,\n","   'count_j': 0,\n","   'count_k': 0,\n","   'count_l': 0,\n","   'count_m': 1,\n","   'count_n': 0,\n","   'count_o': 0,\n","   'count_p': 0,\n","   'count_q': 0,\n","   'count_r': 1,\n","   'count_s': 0,\n","   'count_t': 0,\n","   'count_u': 0,\n","   'count_v': 0,\n","   'count_w': 0,\n","   'count_x': 0,\n","   'count_y': 0,\n","   'count_z': 0},\n","  'male'),\n"," ({'length': 5,\n","   'first_letter': 'a',\n","   'last letter': 'n',\n","   'vowel_count': 3,\n","   'consonant_count': 2,\n","   'suffix': 'on',\n","   'count_a': 2,\n","   'count_b': 0,\n","   'count_c': 0,\n","   'count_d': 0,\n","   'count_e': 0,\n","   'count_f': 0,\n","   'count_g': 0,\n","   'count_h': 0,\n","   'count_i': 0,\n","   'count_j': 0,\n","   'count_k': 0,\n","   'count_l': 0,\n","   'count_m': 0,\n","   'count_n': 1,\n","   'count_o': 1,\n","   'count_p': 0,\n","   'count_q': 0,\n","   'count_r': 1,\n","   'count_s': 0,\n","   'count_t': 0,\n","   'count_u': 0,\n","   'count_v': 0,\n","   'count_w': 0,\n","   'count_x': 0,\n","   'count_y': 0,\n","   'count_z': 0},\n","  'male')]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["new_lab_data= []\n","for name, label in labeled_data:\n","    features = get_features(name)\n","    new_lab_data.append((features, label))\n","\n","new_lab_data[:2]"]},{"cell_type":"markdown","id":"8a28eb1d","metadata":{"papermill":{"duration":0.011911,"end_time":"2024-10-08T08:36:35.661573","exception":false,"start_time":"2024-10-08T08:36:35.649662","status":"completed"},"tags":[]},"source":["# Model development"]},{"cell_type":"markdown","id":"c85425df","metadata":{"papermill":{"duration":0.011972,"end_time":"2024-10-08T08:36:35.685962","exception":false,"start_time":"2024-10-08T08:36:35.67399","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Shuffle the data in random order before splitting into train and test in order to obtain optimized sample for training."]},{"cell_type":"code","execution_count":9,"id":"446a7d1d","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.713021Z","iopub.status.busy":"2024-10-08T08:36:35.712042Z","iopub.status.idle":"2024-10-08T08:36:35.726747Z","shell.execute_reply":"2024-10-08T08:36:35.725226Z"},"papermill":{"duration":0.031023,"end_time":"2024-10-08T08:36:35.729372","exception":false,"start_time":"2024-10-08T08:36:35.698349","status":"completed"},"tags":[]},"outputs":[],"source":["random.shuffle(new_lab_data)"]},{"cell_type":"markdown","id":"ab4d199b","metadata":{"papermill":{"duration":0.012196,"end_time":"2024-10-08T08:36:35.753993","exception":false,"start_time":"2024-10-08T08:36:35.741797","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Select first 1000 records of the shuffled data as test and remaining as training set."]},{"cell_type":"code","execution_count":10,"id":"c641a2bf","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.780792Z","iopub.status.busy":"2024-10-08T08:36:35.780331Z","iopub.status.idle":"2024-10-08T08:36:35.786474Z","shell.execute_reply":"2024-10-08T08:36:35.785095Z"},"papermill":{"duration":0.022845,"end_time":"2024-10-08T08:36:35.789305","exception":false,"start_time":"2024-10-08T08:36:35.76646","status":"completed"},"tags":[]},"outputs":[],"source":["test_data = new_lab_data[:1000]\n","train_data = new_lab_data[1000:]"]},{"cell_type":"markdown","id":"5f4c90ab","metadata":{"papermill":{"duration":0.011998,"end_time":"2024-10-08T08:36:35.813977","exception":false,"start_time":"2024-10-08T08:36:35.801979","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Define the classifier object for training of the model."]},{"cell_type":"code","execution_count":11,"id":"093fd863","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:35.841288Z","iopub.status.busy":"2024-10-08T08:36:35.840845Z","iopub.status.idle":"2024-10-08T08:36:36.226389Z","shell.execute_reply":"2024-10-08T08:36:36.225095Z"},"papermill":{"duration":0.402377,"end_time":"2024-10-08T08:36:36.229602","exception":false,"start_time":"2024-10-08T08:36:35.827225","status":"completed"},"tags":[]},"outputs":[],"source":["classifier= nltk.naivebayes.NaiveBayesClassifier.train(train_data)"]},{"cell_type":"markdown","id":"2b2a0d3c","metadata":{"papermill":{"duration":0.012279,"end_time":"2024-10-08T08:36:36.254563","exception":false,"start_time":"2024-10-08T08:36:36.242284","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Once the training is complete, the classifier object may be used to classify for a single name input."]},{"cell_type":"code","execution_count":12,"id":"7b52e31c","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.281659Z","iopub.status.busy":"2024-10-08T08:36:36.281231Z","iopub.status.idle":"2024-10-08T08:36:36.289617Z","shell.execute_reply":"2024-10-08T08:36:36.288502Z"},"papermill":{"duration":0.024668,"end_time":"2024-10-08T08:36:36.29196","exception":false,"start_time":"2024-10-08T08:36:36.267292","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["'male'"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["classifier.classify(get_features('Rohan'))"]},{"cell_type":"markdown","id":"4c0f0b68","metadata":{"papermill":{"duration":0.012181,"end_time":"2024-10-08T08:36:36.316958","exception":false,"start_time":"2024-10-08T08:36:36.304777","status":"completed"},"tags":[]},"source":["\n","**Note :**\n","  - For classification input text needs to be converted into features similar to the training data\n","  - We can use the same feature extraction function here for transformation\n","    \n"]},{"cell_type":"markdown","id":"a4bdc17d","metadata":{"papermill":{"duration":0.012008,"end_time":"2024-10-08T08:36:36.341517","exception":false,"start_time":"2024-10-08T08:36:36.329509","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> This classifier object can also be used to classify multiple text inputs at the same time."]},{"cell_type":"markdown","id":"5d163858","metadata":{"papermill":{"duration":0.016485,"end_time":"2024-10-08T08:36:36.372505","exception":false,"start_time":"2024-10-08T08:36:36.35602","status":"completed"},"tags":[]},"source":["* In order to do so, pass a unlabeled data to the classifier associated function classify_many.\n","* The below snippet separates the labels from the preprocessed (feature extracted) list and prepares the data input for the classification function."]},{"cell_type":"code","execution_count":13,"id":"29631bf5","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.411989Z","iopub.status.busy":"2024-10-08T08:36:36.410238Z","iopub.status.idle":"2024-10-08T08:36:36.418669Z","shell.execute_reply":"2024-10-08T08:36:36.417412Z"},"papermill":{"duration":0.030778,"end_time":"2024-10-08T08:36:36.421479","exception":false,"start_time":"2024-10-08T08:36:36.390701","status":"completed"},"tags":[]},"outputs":[],"source":["test_features = []\n","test_labels = []\n","for feature_set, label in test_data:\n","    test_features.append(feature_set)\n","    test_labels.append(label)"]},{"cell_type":"markdown","id":"695c6166","metadata":{"papermill":{"duration":0.01217,"end_time":"2024-10-08T08:36:36.446513","exception":false,"start_time":"2024-10-08T08:36:36.434343","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> Obtain the classes for the test input."]},{"cell_type":"code","execution_count":14,"id":"697d3013","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.477881Z","iopub.status.busy":"2024-10-08T08:36:36.477416Z","iopub.status.idle":"2024-10-08T08:36:36.686017Z","shell.execute_reply":"2024-10-08T08:36:36.684706Z"},"papermill":{"duration":0.228697,"end_time":"2024-10-08T08:36:36.689794","exception":false,"start_time":"2024-10-08T08:36:36.461097","status":"completed"},"tags":[]},"outputs":[],"source":["test_labels_pred = classifier.classify_many(test_features)"]},{"cell_type":"markdown","id":"05a4d4cf","metadata":{"papermill":{"duration":0.013053,"end_time":"2024-10-08T08:36:36.719733","exception":false,"start_time":"2024-10-08T08:36:36.70668","status":"completed"},"tags":[]},"source":["# Evaluation"]},{"cell_type":"markdown","id":"9d628e28","metadata":{"papermill":{"duration":0.012477,"end_time":"2024-10-08T08:36:36.744741","exception":false,"start_time":"2024-10-08T08:36:36.732264","status":"completed"},"tags":[]},"source":["<font size = 5 color = blue> <b> Confusion Matrix"]},{"cell_type":"code","execution_count":15,"id":"e6e095f5","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.772253Z","iopub.status.busy":"2024-10-08T08:36:36.771799Z","iopub.status.idle":"2024-10-08T08:36:36.781355Z","shell.execute_reply":"2024-10-08T08:36:36.779981Z"},"papermill":{"duration":0.026592,"end_time":"2024-10-08T08:36:36.784031","exception":false,"start_time":"2024-10-08T08:36:36.757439","status":"completed"},"tags":[]},"outputs":[],"source":["for_matrix = pd.DataFrame({'pred' : test_labels_pred, 'act' : test_labels})"]},{"cell_type":"code","execution_count":16,"id":"1f633a0e","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.811473Z","iopub.status.busy":"2024-10-08T08:36:36.811004Z","iopub.status.idle":"2024-10-08T08:36:36.861587Z","shell.execute_reply":"2024-10-08T08:36:36.860337Z"},"papermill":{"duration":0.067875,"end_time":"2024-10-08T08:36:36.864441","exception":false,"start_time":"2024-10-08T08:36:36.796566","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>act</th>\n","      <th>female</th>\n","      <th>male</th>\n","    </tr>\n","    <tr>\n","      <th>pred</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>female</th>\n","      <td>499</td>\n","      <td>84</td>\n","    </tr>\n","    <tr>\n","      <th>male</th>\n","      <td>116</td>\n","      <td>301</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["act     female  male\n","pred                \n","female     499    84\n","male       116   301"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["confusion_mat = pd.crosstab(for_matrix.pred, for_matrix.act)\n","confusion_mat"]},{"cell_type":"code","execution_count":17,"id":"50c60189","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.892007Z","iopub.status.busy":"2024-10-08T08:36:36.891538Z","iopub.status.idle":"2024-10-08T08:36:36.900345Z","shell.execute_reply":"2024-10-08T08:36:36.898873Z"},"papermill":{"duration":0.025478,"end_time":"2024-10-08T08:36:36.902761","exception":false,"start_time":"2024-10-08T08:36:36.877283","status":"completed"},"tags":[]},"outputs":[],"source":["# Get the values of true positives, true negatives, false positives, false negatives for computation of accuracy and other measures\n","TP = confusion_mat.iloc[0,0]\n","TN = confusion_mat.iloc[1,1]\n","FP = confusion_mat.iloc[0,1]\n","FN = confusion_mat.iloc[1,0]"]},{"cell_type":"code","execution_count":18,"id":"d22f6de0","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.930646Z","iopub.status.busy":"2024-10-08T08:36:36.930181Z","iopub.status.idle":"2024-10-08T08:36:36.936731Z","shell.execute_reply":"2024-10-08T08:36:36.935556Z"},"papermill":{"duration":0.023821,"end_time":"2024-10-08T08:36:36.939415","exception":false,"start_time":"2024-10-08T08:36:36.915594","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy : 80.00 %\n"]}],"source":["Accuracy = (TP + TN) / sum([TP, TN, FP, FN]) * 100\n","print(f\"Accuracy : {Accuracy:0.2f} %\")"]},{"cell_type":"markdown","id":"53d84736","metadata":{"papermill":{"duration":0.012513,"end_time":"2024-10-08T08:36:36.964907","exception":false,"start_time":"2024-10-08T08:36:36.952394","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> NLTK also provides functions to obtain accuracy for the model."]},{"cell_type":"code","execution_count":19,"id":"9a9cd7fc","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:36.992239Z","iopub.status.busy":"2024-10-08T08:36:36.991764Z","iopub.status.idle":"2024-10-08T08:36:37.152388Z","shell.execute_reply":"2024-10-08T08:36:37.151084Z"},"papermill":{"duration":0.177414,"end_time":"2024-10-08T08:36:37.155053","exception":false,"start_time":"2024-10-08T08:36:36.977639","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0.8"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["## Accuracy on test data :\n","nltk.classify.accuracy(classifier, test_data)"]},{"cell_type":"markdown","id":"04916266","metadata":{"papermill":{"duration":0.012909,"end_time":"2024-10-08T08:36:37.181542","exception":false,"start_time":"2024-10-08T08:36:37.168633","status":"completed"},"tags":[]},"source":["<font size = 5 color = seagreen> <b> The nltk `naive bayes model` also provides the `top n` important features contributing in classification."]},{"cell_type":"code","execution_count":20,"id":"9070daa6","metadata":{"execution":{"iopub.execute_input":"2024-10-08T08:36:37.209424Z","iopub.status.busy":"2024-10-08T08:36:37.208952Z","iopub.status.idle":"2024-10-08T08:36:37.217901Z","shell.execute_reply":"2024-10-08T08:36:37.216659Z"},"papermill":{"duration":0.026435,"end_time":"2024-10-08T08:36:37.220948","exception":false,"start_time":"2024-10-08T08:36:37.194513","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Most Informative Features\n","                  suffix = 'na'           female : male   =     92.8 : 1.0\n","                  suffix = 'la'           female : male   =     73.6 : 1.0\n","                  suffix = 'ia'           female : male   =     37.3 : 1.0\n","                  suffix = 'ra'           female : male   =     33.2 : 1.0\n","             last letter = 'a'            female : male   =     33.0 : 1.0\n","                  suffix = 'sa'           female : male   =     32.7 : 1.0\n","             last letter = 'k'              male : female =     31.0 : 1.0\n","                  suffix = 'us'             male : female =     25.2 : 1.0\n","                  suffix = 'do'             male : female =     24.1 : 1.0\n","                  suffix = 'rd'             male : female =     23.3 : 1.0\n","                  suffix = 'ld'             male : female =     23.2 : 1.0\n","                  suffix = 'ta'           female : male   =     23.1 : 1.0\n","                  suffix = 'rt'             male : female =     22.3 : 1.0\n","             last letter = 'p'              male : female =     18.8 : 1.0\n","             last letter = 'v'              male : female =     17.7 : 1.0\n"]}],"source":["classifier.show_most_informative_features(n = 15)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30786,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.14"},"papermill":{"default_parameters":{},"duration":9.675668,"end_time":"2024-10-08T08:36:37.956983","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-10-08T08:36:28.281315","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}